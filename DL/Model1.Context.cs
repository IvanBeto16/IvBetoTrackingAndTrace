//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IvBetoTrackingAndTraceEntities : DbContext
    {
        public IvBetoTrackingAndTraceEntities()
            : base("name=IvBetoTrackingAndTraceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Entrega> Entrega { get; set; }
        public virtual DbSet<EstatusEntrega> EstatusEntrega { get; set; }
        public virtual DbSet<EstatusUnidad> EstatusUnidad { get; set; }
        public virtual DbSet<Paquete> Paquete { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<UnidadEntrega> UnidadEntrega { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Repartidor> Repartidor { get; set; }
    
        public virtual int UsuarioAdd(string username, string password, string email, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idRol, ObjectParameter filasInsertadas)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioAdd", usernameParameter, passwordParameter, emailParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idRolParameter, filasInsertadas);
        }
    
        public virtual int UsuarioUpdate(Nullable<int> idUsuario, string username, string password, string email, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idRol, ObjectParameter filasActualizadas)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioUpdate", idUsuarioParameter, usernameParameter, passwordParameter, emailParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idRolParameter, filasActualizadas);
        }
    
        public virtual int RepartidorDelete(Nullable<int> idRepartidor)
        {
            var idRepartidorParameter = idRepartidor.HasValue ?
                new ObjectParameter("IdRepartidor", idRepartidor) :
                new ObjectParameter("IdRepartidor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RepartidorDelete", idRepartidorParameter);
        }
    
        public virtual ObjectResult<RepartidorGetAll_Result> RepartidorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RepartidorGetAll_Result>("RepartidorGetAll");
        }
    
        public virtual ObjectResult<RepartidorGetById_Result> RepartidorGetById(Nullable<int> idRepartidor)
        {
            var idRepartidorParameter = idRepartidor.HasValue ?
                new ObjectParameter("IdRepartidor", idRepartidor) :
                new ObjectParameter("IdRepartidor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RepartidorGetById_Result>("RepartidorGetById", idRepartidorParameter);
        }
    
        public virtual int UnidadEntregaAdd(string numeroPlaca, string modelo, string marca, Nullable<int> anioFabricacion, Nullable<int> idEstatus)
        {
            var numeroPlacaParameter = numeroPlaca != null ?
                new ObjectParameter("NumeroPlaca", numeroPlaca) :
                new ObjectParameter("NumeroPlaca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var anioFabricacionParameter = anioFabricacion.HasValue ?
                new ObjectParameter("AnioFabricacion", anioFabricacion) :
                new ObjectParameter("AnioFabricacion", typeof(int));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("IdEstatus", idEstatus) :
                new ObjectParameter("IdEstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnidadEntregaAdd", numeroPlacaParameter, modeloParameter, marcaParameter, anioFabricacionParameter, idEstatusParameter);
        }
    
        public virtual int UnidadEntregaDelete(Nullable<int> idUnidad)
        {
            var idUnidadParameter = idUnidad.HasValue ?
                new ObjectParameter("IdUnidad", idUnidad) :
                new ObjectParameter("IdUnidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnidadEntregaDelete", idUnidadParameter);
        }
    
        public virtual ObjectResult<UnidadEntregaGetAll_Result> UnidadEntregaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnidadEntregaGetAll_Result>("UnidadEntregaGetAll");
        }
    
        public virtual int UnidadEntregaUpdate(Nullable<int> idUnidad, string numeroPlaca, string modelo, string marca, Nullable<int> anioFabricacion, Nullable<int> idEstatus)
        {
            var idUnidadParameter = idUnidad.HasValue ?
                new ObjectParameter("IdUnidad", idUnidad) :
                new ObjectParameter("IdUnidad", typeof(int));
    
            var numeroPlacaParameter = numeroPlaca != null ?
                new ObjectParameter("NumeroPlaca", numeroPlaca) :
                new ObjectParameter("NumeroPlaca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var anioFabricacionParameter = anioFabricacion.HasValue ?
                new ObjectParameter("AnioFabricacion", anioFabricacion) :
                new ObjectParameter("AnioFabricacion", typeof(int));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("IdEstatus", idEstatus) :
                new ObjectParameter("IdEstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnidadEntregaUpdate", idUnidadParameter, numeroPlacaParameter, modeloParameter, marcaParameter, anioFabricacionParameter, idEstatusParameter);
        }
    
        public virtual ObjectResult<UsuarioGetAll_Result> UsuarioGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioGetAll_Result>("UsuarioGetAll");
        }
    
        public virtual ObjectResult<UsuarioGetByEmail_Result> UsuarioGetByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioGetByEmail_Result>("UsuarioGetByEmail", emailParameter);
        }
    
        public virtual ObjectResult<RolGetAll_Result> RolGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RolGetAll_Result>("RolGetAll");
        }
    
        public virtual int UsuarioDelete(Nullable<int> idUsuario, ObjectParameter filasEliminadas)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioDelete", idUsuarioParameter, filasEliminadas);
        }
    
        public virtual ObjectResult<UsuarioGetById_Result> UsuarioGetById(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioGetById_Result>("UsuarioGetById", idUsuarioParameter);
        }
    
        public virtual ObjectResult<EstatusUnidadGetAll_Result> EstatusUnidadGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EstatusUnidadGetAll_Result>("EstatusUnidadGetAll");
        }
    
        public virtual int RepartidorAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, Nullable<System.DateTime> fechaIngreso, string fotografia, Nullable<int> idUnidad)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(string));
    
            var idUnidadParameter = idUnidad.HasValue ?
                new ObjectParameter("IdUnidad", idUnidad) :
                new ObjectParameter("IdUnidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RepartidorAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, fechaIngresoParameter, fotografiaParameter, idUnidadParameter);
        }
    
        public virtual int RepartidorUpdate(Nullable<int> idRepartidor, string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, Nullable<System.DateTime> fechaIngreso, string fotografia, Nullable<int> idUnidad)
        {
            var idRepartidorParameter = idRepartidor.HasValue ?
                new ObjectParameter("IdRepartidor", idRepartidor) :
                new ObjectParameter("IdRepartidor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(string));
    
            var idUnidadParameter = idUnidad.HasValue ?
                new ObjectParameter("IdUnidad", idUnidad) :
                new ObjectParameter("IdUnidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RepartidorUpdate", idRepartidorParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, fechaIngresoParameter, fotografiaParameter, idUnidadParameter);
        }
    
        public virtual ObjectResult<UnidadEntregaGetById_Result> UnidadEntregaGetById(Nullable<int> idUnidad)
        {
            var idUnidadParameter = idUnidad.HasValue ?
                new ObjectParameter("IdUnidad", idUnidad) :
                new ObjectParameter("IdUnidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnidadEntregaGetById_Result>("UnidadEntregaGetById", idUnidadParameter);
        }
    }
}
